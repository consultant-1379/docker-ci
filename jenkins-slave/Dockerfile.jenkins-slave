FROM armdockerhub.rnd.ericsson.se/ubuntu:16.04

ARG SSH_KEY=null
ARG VAULT_PASS=null
ARG COMMIT=null
ARG REPOSITORY=null

ENV HOME /home/jenkins-slave
ENV http_proxy http://www-proxy.ericsson.se:8080/
ENV ftp_proxy http://www-proxy.ericsson.se:8080/
ENV https_proxy http://www-proxy.ericsson.se:8080/
ENV no_proxy 127.0.0.1,.ericsson.se,.ericsson.com,134.138.0.0/16,158.88.0.0/16

RUN useradd --comment "Jenkins Slave user" --home-dir $HOME --create-home jenkins-slave && mkdir -p /usr/share/jenkins

# Install docker
# Instruction Manual: https://docs.docker.com/engine/installation/linux/ubuntulinux/

# Update the apt sources with the docker repositories
RUN apt-get update && apt-get install -y apt-transport-https ca-certificates
RUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
RUN echo "deb https://apt.dockerproject.org/repo ubuntu-xenial main" > /etc/apt/sources.list.d/docker.list

# Install the docker-engine
RUN apt-get update && \
    apt-get purge lxc-docker && \
    apt-get install -y openjdk-9-jre \
            docker-engine \
            python \
            wget \
            curl \
            xsltproc \
            python-pip

# Copy necessary scripts and its dependencies to the image
COPY connect-slave.py /
COPY requirements.txt /
COPY wait-for-node-to-be-idle.groovy /
COPY get-node-secret.groovy /

RUN apt-get update && \
    apt-get install -y python-dev \
                       build-essential \
                       libssl-dev \
                       libffi-dev && \
    pip install --upgrade pip && \
    pip install -r /requirements.txt && \
    apt-get purge -y python-dev \
                  build-essential \
                  libssl-dev \
                  libffi-dev && \
    apt-get autoremove -y

RUN chmod +x wait-for-node-to-be-idle.groovy
RUN chmod +x get-node-secret.groovy
RUN ln -sfv /connect-slave.py /bin/connect-slave.py

# setup the identity file
ENV IDENTITY /root/.id_rsa_jenkins

LABEL commit=$COMMIT
LABEL repository=$REPOSITORY

# setup trusted SSL certificate
# there is no hard dependency on JENKINS_HOST variable as the connectivity is already
# tested against other jenkins instances
ARG JENKINS_URL=null
ARG JENKINS_PORT=443

# create certificate
# import and add certificate to keystore
RUN jenkinsDomainName=$(echo ${JENKINS_URL#*//} | cut -d/ -f1) && \
    openssl s_client -connect $jenkinsDomainName:${JENKINS_PORT} </dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > $jenkinsDomainName.cer && \
    keytool -import -noprompt -trustcacerts -alias $jenkinsDomainName -file $jenkinsDomainName.cer -keystore keyStore -storepass keyStorePass

# including certificate flags for java
ENV JAVA_TOOL_OPTIONS "-Djavax.net.ssl.trustStore=keyStore -Djavax.net.ssl.trustStorePassword=keyStorePass"

# Encrypt the ssh key for jenkins master
ENV IDENTITY /root/.id_rsa_jenkins
COPY auth/$VAULT_PASS /root/
COPY auth/$SSH_KEY /root/.id_rsa_jenkins
RUN ansible-vault encrypt /root/.id_rsa_jenkins --vault-password-file=/root/$VAULT_PASS
RUN rm -f /root/$VAULT_PASS
